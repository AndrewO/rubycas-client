= RubyCAS-Client Changelog

== Version 0.10.2

* Added this changelog to advise users of major changes to the library.
* service and targetService parameters in requests are now properly URI-encoded,
  so the filter should behave properly when your service has query parameters.
  Thanks sakazuki for pointing out the problem.
* You can now force the CAS client to re-authenticate itself with the CAS server
  (i.e. override the authentication stored in the session) by providing a new
  service ticket in the URI. In other words, the client will authenticate with
  CAS if: a) you have a 'ticket' parameter in the URI, and there is currently no
  authentication info in the session, or b) you have a 'ticket' parameter in the
  URI and this ticket is different than the ticket that was used to authenticat
  the existing session. This is especially useful when you are using CAS proxying,
  since it allows you to force re-authentication in proxied applications (for
  example, when the user has logged out and a new user has logged in in the parent
  proxy-granting application).
* If your service URI has a 'ticket' parameter, it will now be automatically
  removed when passing the service as a parameter in any CAS request. This is
  done because at least some CAS servers will happily accept a service URI with
  a 'ticket' parameter, which will result in a URI with  multiple 'ticket' 
  parameters once you are redirected back to CAS (and that in turn can result 
  in an endless redirection loop).
* Logging has been greatly improved, which should make debugging your CAS
  installation much easier. Look for the logs under log/cas_client_RAILS_ENV.log
* When you install RubyCAS-Client as a Rails plugin, it will now by default
  use a custom logger. You can change this by explicitly setting your own
  logger in your environment.rb, or by modifying the plugin's init.rb.
* CasProxyCallbackController no longer checks to make sure that the incoming
  request is secure. The check is impossible since the secure header is not 
  passed on by at least some reverse proxies (like Pound), and if you are using
  the callback controller then you are almost certainly also using a reverse
  proxy.
* Cleaned up and updated documentation, fixed some example code.